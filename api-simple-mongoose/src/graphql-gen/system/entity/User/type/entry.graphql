
# # User


input EmbedUserFilter {
  or: [EmbedUserFilterItem]
  and: [EmbedUserFilterItem]
  some: UserFilter
  none: UserFilter
  every: UserFilter
}

input EmbedUserFilterItem {
  some: UserFilter
  none: UserFilter
  every: UserFilter
}

input UserFilter {
  or: [UserFilterItem]
  and: [UserFilterItem]
  userName: WhereString
  password: WhereString
  isAdmin: WhereBoolean
  isSystem: WhereBoolean
  enabled: WhereBoolean
  id: WhereID
  updatedBy: WhereID
  updatedAt: WhereDate
}

input UserComplexFilter {
  or: [UserComplexFilter]
  and: [UserComplexFilter]
  userName: WhereString
  password: WhereString
  isAdmin: WhereBoolean
  isSystem: WhereBoolean
  enabled: WhereBoolean
  id: WhereID
  updatedBy: WhereID
  updatedAt: WhereDate
}

input UserFilterItem {
  userName: WhereString
  password: WhereString
  isAdmin: WhereBoolean
  isSystem: WhereBoolean
  enabled: WhereBoolean
  id: WhereID
  updatedBy: WhereID
  updatedAt: WhereDate
}

input UserFilterSubscriptionsItem {
  userName: WhereString
  password: WhereString
  isAdmin: WhereBoolean
  isSystem: WhereBoolean
  enabled: WhereBoolean
  id: WhereID
  updatedBy: WhereID
  updatedAt: WhereDate
}

input UserFilterSubscriptions {
  or: [UserFilterSubscriptions]
  and: [UserFilterSubscriptions]
  mutation: WhereMutationKind
  node: UserFilterSubscriptionsItem
  previous: UserFilterSubscriptionsItem
  updatedFields: WhereListOfStrings
}

type User implements Node{
  # # User Name
  userName: String!
  # # Password
  password: String!
  # # Is Admin
  isAdmin: Boolean
  # # Is System
  isSystem: Boolean
  # # Enabled
  enabled: Boolean
  # # Id
  id: ID!
  # # Updated By
  updatedBy: ID
  # # Updated At
  updatedAt: Date
  # # Todos  
  todos(after: String, first: Int, before: String, last: Int, limit: Int, skip: Int, orderBy: [ToDoItemSortOrder], filter:ToDoItemComplexFilter ): UserHasManyTodosConnection  
  # # Files  
  files(after: String, first: Int, before: String, last: Int, limit: Int, skip: Int, orderBy: [FileSortOrder], filter:FileComplexFilter ): UserHasManyFilesConnection  
}


