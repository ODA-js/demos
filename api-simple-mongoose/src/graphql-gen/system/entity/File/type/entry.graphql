
# # File


input EmbedFileFilter {
  or: [EmbedFileFilterItem]
  and: [EmbedFileFilterItem]
  some: FileFilter
  none: FileFilter
  every: FileFilter
}

input EmbedFileFilterItem {
  some: FileFilter
  none: FileFilter
  every: FileFilter
}

input FileFilter {
  or: [FileFilterItem]
  and: [FileFilterItem]
  path: WhereString
  filename: WhereString
  mimetype: WhereString
  encoding: WhereString
  user: WhereID
  id: WhereID
}

input FileComplexFilter {
  or: [FileComplexFilter]
  and: [FileComplexFilter]
  path: WhereString
  filename: WhereString
  mimetype: WhereString
  encoding: WhereString
  user: WhereID
  id: WhereID
}

input FileFilterItem {
  path: WhereString
  filename: WhereString
  mimetype: WhereString
  encoding: WhereString
  user: WhereID
  id: WhereID
}

input FileFilterSubscriptionsItem {
  path: WhereString
  filename: WhereString
  mimetype: WhereString
  encoding: WhereString
  user: WhereID
  id: WhereID
}

input FileFilterSubscriptions {
  or: [FileFilterSubscriptions]
  and: [FileFilterSubscriptions]
  mutation: WhereMutationKind
  node: FileFilterSubscriptionsItem
  previous: FileFilterSubscriptionsItem
  updatedFields: WhereListOfStrings
}

type File implements Node{
  # # Path
  path: String!
  # # Filename
  filename: String
  # # Mimetype
  mimetype: String
  # # Encoding
  encoding: String
  # # Id
  id: ID!
  # # User
  user: User

}


